* Setup that requires tangling
- Install the desktop
#+begin_src text :tangle /sudo::/usr/share/xsessions/exwm-gnome-flashback-session.desktop
  [Desktop Entry]
  Name=EXWM GNOME Flashback
  Comment=This session logs you into GNOME Flashback with EXWM
  Exec=exwm-gnome-flashback-session
  TryExec=emacs
  Type=Application
  DesktopNames=GNOME-Flashback;GNOME;
#+end_src
#+begin_src text :tangle /sudo::/usr/share/gnome-session/sessions/exwm-gnome-flashback.session
  [GNOME Session]
  Name=EXWM GNOME Flashback
  RequiredComponents=org.gnome.SettingsDaemon.A11ySettings;org.gnome.SettingsDaemon.Clipboard;org.gnome.SettingsDaemon.Color;org.gnome.SettingsDaemon.Datetime;org.gnome.SettingsDaemon.Housekeeping;org.gnome.SettingsDaemon.Keyboard;org.gnome.SettingsDaemon.MediaKeys;org.gnome.SettingsDaemon.Mouse;org.gnome.SettingsDaemon.Power;org.gnome.SettingsDaemon.PrintNotifications;org.gnome.SettingsDaemon.Rfkill;org.gnome.SettingsDaemon.ScreensaverProxy;org.gnome.SettingsDaemon.Sharing;org.gnome.SettingsDaemon.Smartcard;org.gnome.SettingsDaemon.Sound;org.gnome.SettingsDaemon.Wacom;org.gnome.SettingsDaemon.XSettings;gnome-flashback-init;gnome-flashback;exwm-gnome-flashback;
#+end_src
- Remap control:
#+begin_src text :tangle ~/.Xmodmap
  remove Lock = Caps_Lock
  keysym Caps_Lock = Control_L

  add Control = Control_L
#+end_src

- Setup xinit
#+begin_src bash :tangle ~/.xinitrc
# You may need to comment out the next line to disable access control.
#xhost +SI:localuser:$USER

# Set themes, etc.
gnome-settings-daemon &

# Set fallback cursor.
xsetroot -cursor_name left_ptr

# Set keyboard repeat rate.
xset r rate 200 60

# If Emacs is started in server mode, `emacsclient` is a convenient way to
# edit files in place (used by e.g. `git commit`).
export VISUAL=emacsclient
export EDITOR="$VISUAL"

# Finally launch emacs.
exec dbus-launch --exit-with-session emacs
#+end_src

- zsh configs:
#+begin_src bash :tangle ~/.zshrc
  # If you come from bash you might have to change your $PATH.
  # export PATH=$HOME/bin:/usr/local/bin:$PATH

  [[ $TERM == "dumb" ]] && unsetopt zle && PS1='$ '
  # Path to your oh-my-zsh installation.
    export ZSH="/home/bonface/.oh-my-zsh"

  # Set name of the theme to load --- if set to "random", it will
  # load a random theme each time oh-my-zsh is loaded, in which case,
  # to know which specific one was loaded, run: echo $RANDOM_THEME
  # See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
  ZSH_THEME="robbyrussell"

  # Set list of themes to pick from when loading at random
  # Setting this variable when ZSH_THEME=random will cause zsh to load
  # a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
  # If set to an empty array, this variable will have no effect.
  # ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

  # Uncomment the following line to use case-sensitive completion.
  # CASE_SENSITIVE="true"

  # Uncomment the following line to use hyphen-insensitive completion.
  # Case-sensitive completion must be off. _ and - will be interchangeable.
  # HYPHEN_INSENSITIVE="true"

  # Uncomment the following line to disable bi-weekly auto-update checks.
  # DISABLE_AUTO_UPDATE="true"

  # Uncomment the following line to change how often to auto-update (in days).
  # export UPDATE_ZSH_DAYS=13

  # Uncomment the following line to disable colors in ls.
  # DISABLE_LS_COLORS="true"

  # Uncomment the following line to disable auto-setting terminal title.
  # DISABLE_AUTO_TITLE="true"

  # Uncomment the following line to enable command auto-correction.
  # ENABLE_CORRECTION="true"

  # Uncomment the following line to display red dots whilst waiting for completion.
  # COMPLETION_WAITING_DOTS="true"

  # Uncomment the following line if you want to disable marking untracked files
  # under VCS as dirty. This makes repository status check for large repositories
  # much, much faster.
  # DISABLE_UNTRACKED_FILES_DIRTY="true"

  # Uncomment the following line if you want to change the command execution time
  # stamp shown in the history command output.
  # You can set one of the optional three formats:
  # "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
  # or set a custom format using the strftime function format specifications,
  # see 'man strftime' for details.
  # HIST_STAMPS="mm/dd/yyyy"

  # Would you like to use another custom folder than $ZSH/custom?
  # ZSH_CUSTOM=/path/to/new-custom-folder

  # Which plugins would you like to load?
  # Standard plugins can be found in ~/.oh-my-zsh/plugins/*
  # Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
  # Example format: plugins=(rails git textmate ruby lighthouse)
  # Add wisely, as too many plugins slow down shell startup.
  plugins=(
      archlinux
      autojump
      composer
      command-not-found
      emacs
      git
      git-extras
      history
      jsontools
      pip
      python
  )

  source $ZSH/oh-my-zsh.sh

  # User configuration

  # export MANPATH="/usr/local/man:$MANPATH"

  # You may need to manually set your language environment
  # export LANG=en_US.UTF-8

  # Preferred editor for local and remote sessions
  # if [[ -n $SSH_CONNECTION ]]; then
  #   export EDITOR='vim'
  # else
  #   export EDITOR='mvim'
  # fi

  export VISUAL="emacsclient"
  export ALTERNATE_EDITOR="emacs" EDITOR=emacsclient VISUAL=emacsclient
  export LEDGER_FILE=~/self/finances/hledger.journal

  # Compilation flags
  # export ARCHFLAGS="-arch x86_64"

  # ssh
  # export SSH_KEY_PATH="~/.ssh/rsa_id"

  # Set personal aliases, overriding those provided by oh-my-zsh libs,
  # plugins, and themes. Aliases can be placed here, though oh-my-zsh
  # users are encouraged to define aliases within the ZSH_CUSTOM folder.
  # For a full list of active aliases, run `alias`.
  #
  # Example aliases
  # alias zshconfig="mate ~/.zshrc"
  # alias ohmyzsh="mate ~/.oh-my-zsh"
  alias ec='emacsclient'

  alias dbtunnel='ssh -fNL 8989:172.24.16.155:3306 nmacharia@185.144.231.187'
#+end_src

#+begin_src bash :tangle ~/.zshenv
  export PATH=/usr/local/sbin:/usr/local/bin:/usr/bin:/opt/android-sdk/platform-tools:/opt/android-sdk/tools:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/usr/bin/avr-gcc:~/.gem/ruby/2.4.0/bin:~/.npm-global/node_modules:~/.config/composer/vendor/bin:/usr/bin/core_perl:~/.config/composer/vendor/bin:/usr/bin/avr-gcc:~/go/bin/:~/.local/bin:~/.pyenv/bin:~/.rvm/bin:~/node_modules/bin:

#+end_src
* Commands to run:
- Setup oh-my-zsh:

#+begin_src bash :dir /sudo:: :results verbatim
  yes | pacman -S zsh zsh-completions
#+end_src

#+begin_src bash
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  chsh -s /usr/bin/zsh
#+end_src

#+begin_src bash :dir /sudo:: :results verbatim
  yes | pacman -Ss nodejs avr-gcc python go gnome gparted git
#+end_src

- set up yay
#+begin_src bash
#+end_src
